{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","id","href","src","alt","height","border","React","Component","Editor","props","state","editText","handleChange","bind","e","this","setState","target","value","text","className","onChange","textPreview","Previewer","markVersion","nextProps","marked","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAKMA,E,4JACJ,WACE,OACE,sBAAKC,GAAG,MAAR,UACE,sBAAKA,GAAG,QAAR,UACE,8BACA,mBAAGC,KAAK,sBAAR,SAA8B,qBAAKC,IAAI,iDAAiDC,IAAI,oBAAoBC,OAAO,KAAIC,OAAO,UAC5H,wDACR,cAAC,EAAD,W,GARUC,IAAMC,WAalBC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,SAAQ,2pCA2CV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBA9CJ,E,gDAiDlB,SAAaC,GACXC,KAAKC,SAAS,CAACL,SAAWG,EAAEG,OAAOC,U,oBAGrC,WACE,IAAMC,EAAOJ,KAAKL,MAAMC,SACxB,OACE,sBAAKX,GAAG,gBAAR,UACE,sBAAKA,GAAG,kBAAR,mBACA,0BAAUA,GAAG,SAASoB,UAAU,cAAcF,MAAOC,EAAME,SAAUN,KAAKH,kBAE1E,sBAAKZ,GAAG,qBAAR,oBACA,cAAC,EAAD,CAAWsB,YAAeH,c,GA9Dbb,IAAMC,WAqErBgB,E,kDACJ,WAAYd,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXS,KAAO,EAAKV,MAAMa,YAClBE,YAAc,IAJA,E,6DAQlB,SAA0BC,GAEpBA,EAAUH,cAAgBP,KAAKN,MAAMa,aACvCP,KAAKC,SAAS,CACZG,KAAMM,EAAUH,YAChBE,YAAcE,IAAOD,EAAUH,iB,+BAKrC,WACEP,KAAKC,SAAS,CACZQ,YAAcE,IAAOX,KAAKN,MAAMa,iB,oBAIpC,WACE,OACE,qBAAKtB,GAAG,UAAUoB,UAAU,cAAcO,wBAAyB,CAAEC,OAAQb,KAAKL,MAAMc,mB,GA3BtElB,IAAMC,WAiCfR,IC5GA8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.de912dc6.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport marked from 'marked';\n\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div id=\"app\">\n        <div id='title'>\n          <div>\n          <a href=\"https://reactjs.org\"><img src=\"https://i.ibb.co/LY9JXWv/LOGO-bening-kotak.png\" alt=\"LOGO-bening-kotak\" height='30'border=\"0\"></img></a>\n          </div><div>Markdown Previewer</div></div>\n        <Editor></Editor>\n      </div>\n    )\n  }\n}\nclass Editor extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      editText : `# Welcome to my React Markdown Previewer!\n## This is a sub-heading...\n### And here's some other cool stuff:\n      \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n      \n\\`\\`\\`\n// this is multi-line code:\n      \nfunction anotherExample(firstLine, lastLine) {\nif (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\nreturn multiLineCode;\n }\n}\n\\`\\`\\`\n      \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n      \nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n      \n And if you want to get really crazy, even tables:\n      \nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n      \n- And of course there are lists.\n  - Some are bulleted.\n    - With different indentation levels.\n      - That look like this.\n      \n      \n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n      \n![React Logo w/ Text](https://goo.gl/Umyytc)`\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  \n  handleChange(e){\n    this.setState({editText : e.target.value})\n  }\n\n  render(){\n    const text = this.state.editText\n    return(\n      <div id='mainContainer'>\n        <div id='editorContainer'>Editor\n        <textarea id=\"editor\" className='textContent' value={text} onChange={this.handleChange}></textarea>\n        </div>\n        <div id='previewerContainer'>Preview\n        <Previewer textPreview = {text}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Previewer extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      text : this.props.textPreview,\n      markVersion : ''\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    // Any time props.textPreview changes, update state.\n    if (nextProps.textPreview !== this.props.textPreview) {\n      this.setState({\n        text: nextProps.textPreview,\n        markVersion : marked(nextProps.textPreview)\n      })\n    }\n  }\n\n  componentDidMount(){\n    this.setState({\n      markVersion : marked(this.props.textPreview)\n    })\n  }\n\n  render(){\n    return(\n      <div id=\"preview\" className='textContent' dangerouslySetInnerHTML={{ __html: this.state.markVersion}}>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}